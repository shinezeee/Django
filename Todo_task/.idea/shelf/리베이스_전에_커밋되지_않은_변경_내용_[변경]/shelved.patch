Index: todo/views.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from typing import Any\n\nfrom django.db.models import QuerySet\nfrom django.shortcuts import render\nfrom django.http import Http404\nfrom todo.models import Todo\n\n\n# Create your views here.\n\ndef todo_list (request):\n    todo_list = Todo.objects.all().values_list('id','title')\n    result  = [{'id' : todo[0],'title': todo[1] }for todo in todo_list]\n\n    return render(request,'todo_list.html',{'data':result})\n\ndef todo_info(request,todo_id):\n    try:\n        todo = Todo.objects.get(id=todo_id)\n        info = {\n            'title' : todo.title,\n            'description' : todo.description,\n            'start_date' : todo.start_date,\n            'end_date' : todo.end_date,\n            'is_done' : todo.is_done,\n        }\n        return render(request,'todo_info.html',{'data':info})\n    except Todo.DoesNotExist:\n        raise Http404 (\"Todo does not exist\")
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/todo/views.py b/todo/views.py
--- a/todo/views.py	(revision 95c5b49a11f7f2be9e98153241f1b0f62b045ced)
+++ b/todo/views.py	(date 1737709195406)
@@ -1,29 +1,60 @@
 from typing import Any
 
+from django.contrib.auth.decorators import login_required
 from django.db.models import QuerySet
-from django.shortcuts import render
+from django.shortcuts import render, get_object_or_404, redirect
 from django.http import Http404
+from django.template.context_processors import request
+
+from todo.form import TodoForm
 from todo.models import Todo
+from django.urls import reverse
 
 
 # Create your views here.
 
+# 할 일 리스트
+@login_required()
 def todo_list (request):
     todo_list = Todo.objects.all().values_list('id','title')
     result  = [{'id' : todo[0],'title': todo[1] }for todo in todo_list]
 
     return render(request,'todo_list.html',{'data':result})
 
+# 특정 할 일 보기
+@login_required()
 def todo_info(request,todo_id):
-    try:
-        todo = Todo.objects.get(id=todo_id)
-        info = {
-            'title' : todo.title,
-            'description' : todo.description,
+    todo = get_object_or_404(Todo, id=todo_id)
+    context = {
+         'title' : todo.title,
+            'info' : todo.info,
             'start_date' : todo.start_date,
             'end_date' : todo.end_date,
             'is_done' : todo.is_done,
-        }
-        return render(request,'todo_info.html',{'data':info})
-    except Todo.DoesNotExist:
-        raise Http404 ("Todo does not exist")
\ No newline at end of file
+    }
+    return render(request,'todo_info.html',{'data':context})
+
+
+# 할 일 추가
+@login_required()
+def todo_create(request):
+    form = TodoForm(request.POST or None)
+    if form.is_valid():
+        todo = form.save(commit=False) # 유저추가해야해서 아직 wait
+        todo.user = request.user
+        todo.save()
+        return redirect(reverse('todo_info',kwargs={'pk':todo.pk}))
+    context = {
+        'form':form
+    }
+    return render(request, 'todo_create.html',context)
+
+# 할 일 수정
+@login_required()
+def todo_update():
+    pass
+
+# 할 일 삭제
+@login_required()
+def todo_delete():
+    pass
Index: config/urls.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\"\"\"\nURL configuration for config project.\n\nThe `urlpatterns` list routes URLs to views. For more information please see:\n    https://docs.djangoproject.com/en/5.1/topics/http/urls/\nExamples:\nFunction views\n    1. Add an import:  from my_app import views\n    2. Add a URL to urlpatterns:  path('', views.home, name='home')\nClass-based views\n    1. Add an import:  from other_app.views import Home\n    2. Add a URL to urlpatterns:  path('', Home.as_view(), name='home')\nIncluding another URLconf\n    1. Import the include() function: from django.urls import include, path\n    2. Add a URL to urlpatterns:  path('blog/', include('blog.urls'))\n\"\"\"\n\nfrom django.contrib import admin\nfrom django.urls import path, include\n\nfrom todo.views import todo_list, todo_info\nfrom users import views\n\nurlpatterns = [\n    path(\"admin/\", admin.site.urls),\n    path(\"todo/\", todo_list, name=\"todo_list\"),\n    path(\"todo/<int:todo_id>\",todo_info, name=\"todo_info\"),\n    path(\"accounts/\", include(\"django.contrib.auth.urls\")),\n    path(\"signup/\", views.signup, name=\"signup\"),\n    path(\"login/\", views.login, name=\"login\"),\n\n]\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/config/urls.py b/config/urls.py
--- a/config/urls.py	(revision 95c5b49a11f7f2be9e98153241f1b0f62b045ced)
+++ b/config/urls.py	(date 1737709195403)
@@ -18,15 +18,20 @@
 from django.contrib import admin
 from django.urls import path, include
 
-from todo.views import todo_list, todo_info
-from users import views
+from todo.views import todo_list, todo_info, todo_create, todo_update, todo_delete
+from users import views as user_views
 
 urlpatterns = [
-    path("admin/", admin.site.urls),
     path("todo/", todo_list, name="todo_list"),
+    path("todo/create/",todo_create, name="todo_create"),
     path("todo/<int:todo_id>",todo_info, name="todo_info"),
+    path("todo/<int:todo_id>/update",todo_update , name="todo_update"),
+    path("todo/<int:todo_id>/delete", todo_delete, name="todo_delete"),
     path("accounts/", include("django.contrib.auth.urls")),
-    path("signup/", views.signup, name="signup"),
-    path("login/", views.login, name="login"),
+
+    path("admin/", admin.site.urls),
+    # 유저관련
+    path("signup/", user_views.signup, name="signup"),
+    path("login/", user_views.login, name="login"),
 
 ]
Index: templates/todo_info.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <title>Todo information</title>\n</head>\n<body>\n <h1>{{ data.title }}</h1>\n <h3>{{ data.description }}</h3>\n <p>시작일 : {{ data.start_date }}</p>\n <p>마감일 : {{ data.end_date }}</p>\n <p>완료 여부 : {{ data.is_done }}</p>\n <a href=\"{% url 'todo_list' %}\"><button>목록으로</button></a>\n</body>\n</html>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/todo_info.html b/templates/todo_info.html
--- a/templates/todo_info.html	(revision 95c5b49a11f7f2be9e98153241f1b0f62b045ced)
+++ b/templates/todo_info.html	(date 1737709195404)
@@ -6,7 +6,7 @@
 </head>
 <body>
  <h1>{{ data.title }}</h1>
- <h3>{{ data.description }}</h3>
+ <h3>{{ data.info }}</h3>
  <p>시작일 : {{ data.start_date }}</p>
  <p>마감일 : {{ data.end_date }}</p>
  <p>완료 여부 : {{ data.is_done }}</p>
Index: todo/models.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from django.db import models\n\n# Create your models here.\n\nclass Todo(models.Model) :\n    title = models.CharField(max_length=50) # 제목\n    description = models.TextField() # 할일 설명\n    start_date = models.DateField() # 시작 날짜\n    end_date = models.DateField() # 끝나는 날짜\n    is_done = models.BooleanField(default=False) # 완료 여부\n    created_at = models.DateTimeField(auto_now_add=True) # 생성 날짜\n    updated_at = models.DateTimeField(auto_now=True) # 수정 날짜\n\n\n    def __str__(self):\n        return self.title\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/todo/models.py b/todo/models.py
--- a/todo/models.py	(revision 95c5b49a11f7f2be9e98153241f1b0f62b045ced)
+++ b/todo/models.py	(date 1737709195406)
@@ -1,10 +1,15 @@
+from django.contrib.auth import get_user_model
+#from django.contrib.auth.models import User
 from django.db import models
 
 # Create your models here.
 
+User = get_user_model()
+
 class Todo(models.Model) :
+    user = models.ForeignKey(User, on_delete=models.CASCADE) # 로그인유저 확인
     title = models.CharField(max_length=50) # 제목
-    description = models.TextField() # 할일 설명
+    info = models.TextField() # 할일 설명
     start_date = models.DateField() # 시작 날짜
     end_date = models.DateField() # 끝나는 날짜
     is_done = models.BooleanField(default=False) # 완료 여부
